[tox]
minversion = 1.7
envlist = py35,py34,py27,pypy,pep8
# We need to run sdist to reflect changes in entrypoints during test run
skipsdist = False

[testenv]
usedevelop = True
install_command = pip install -c {toxinidir}/constraints.txt -c{env:UPPER_CONSTRAINTS_FILE:https://git.openstack.org/cgit/openstack/requirements/plain/upper-constraints.txt} -U {opts} {packages}
setenv =
   VIRTUAL_ENV={envdir}
deps =
     -r{toxinidir}/requirements.txt
     -r{toxinidir}/test-requirements.txt
commands = ostestr {posargs}
passenv = http_proxy HTTP_PROXY https_proxy HTTPS_PROXY no_proxy NO_PROXY

[testenv:pep8]
whitelist_externals = bash
commands =
  bash -c "set -o pipefail; find {toxinidir} -type f -name '*.sh' -not -path '*/.tox/*' -print0 | xargs -rt0 bashate -v"
  flake8 {posargs}

[testenv:linters]
deps = yamllint
commands = {toxinidir}/tools/yamllint.sh

[testenv:venv]
commands = {posargs}

[testenv:venv3]
basepython = python3
commands = {posargs}

[testenv:cover]
commands = python setup.py test --coverage --testr-args='{posargs}'

[testenv:docs]
commands = python setup.py build_sphinx

[testenv:debug]
commands = oslo_debug_helper {posargs}

[testenv:multi-deploy]
passenv = APT_CACHE_SERVER
commands =
  bash -ex "{toxinidir}/tools/ccp-multi-deploy/ccp-multi-deploy.sh" {posargs}

[flake8]
# H102 skipped as it's a non-free project

show-source = True
ignore = H102
builtins = _
exclude=.venv,.git,.tox,dist,doc,*openstack/common*,*lib/python*,*egg,build
